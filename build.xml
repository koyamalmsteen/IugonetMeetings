<?xml version="1.0" encoding="utf-8" ?>
<project name="OpenMeetings" default="all" basedir="." xmlns:ac="antlib:net.sf.antcontlib">
  <property environment="env"/>
  <property file="build.properties"/>

  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="/usr/share/java/lib/ant-contrib.jar"/>
    </classpath>
  </taskdef>

  <target name="all" depends="initial_message, clean, init, yum, yasm, lame, twolame, speex, ffmpeg, sox, swftools, openoffice, postgresql, openmeetings, final_message" description="Install All"/>
  
  <target name="initial_message">
    <echo message="###&#x0A;###&#x0A;This installation process takes 25 minutes at least.&#x0A;###&#x0A;###&#x0A;"/>
  </target>

  <target name="init">
  </target>

  <target name="clean" description="Clean everything">
    <delete dir="${src}"/>
    <delete dir="/opt"/>
    <exec executable="/etc/init.d/httpd">
      <arg line="stop"/>
    </exec>
    <exec executable="chkconfig">
      <arg line="httpd off"/>
    </exec>
  </target>

  <target name="yum" description="Install packages by using yum">
    <exec executable="yum">
      <arg line="-y install gcc gcc-c++ bison flex readline-devel zlib-devel ImageMagick ghostscript libjpeg-devel fontconfig-devel giflib-devel alsa-lib-devel pulseaudio-libs-devel libsndfile-devel gsm-devel flac-devel libvorbis libvorbis-devel wavpack-devel libpng libpng-devel ImageMagick-devel libtool-ltdl-devel gtk+- gtk+-devel nasm ElectricFence xmlto SDL-devel opencv opencv-devel openssl-devel gsm-devel libid3tag libid3tag-devel libogg libogg-devel gnutls-devel libcdio-devel libdc1394-devel libiec61833-devel alsa-plugins-speex libtheora-devel libvpx-devel texi2html fftw fftw-devel ruby"/>
    </exec>
  </target>

  <target name="yasm" description="Install yasm.">
    <get src="${src_yasm}" dest="${dst_yasm}" usetimestamp="yes"/>
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_yasm}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${yasm_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${yasm_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${yasm_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="lame" description="Install lame mp3 encoder.">
    <get src="${src_lame}" dest="${dst_lame}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_lame}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${lame_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${lame_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${lame_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="twolame" description="Install twolame mp2 encoder.">
    <get src="${src_twolame}" dest="${dst_twolame}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_twolame}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${twolame_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${twolame_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${twolame_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="sox" description="Install SoX Sound eXchange">
    <get src="${src_sox}" dest="${dst_sox}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvjf"/>
      <arg value="${dst_sox}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${sox_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${sox_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${sox_prefix}">
      <arg value="install"/>
    </exec>
  </target>
  
  <target name="speex" description="Install Speex:A free codec for free speech.">
    <get src="${src_speex}" dest="${dst_speex}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_speex}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${speex_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${speex_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${speex_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="ffmpeg" description="Install ffmpeg:convert and stream audio and video.">
    <get src="${src_ffmpeg}" dest="${dst_ffmpeg}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvjf"/>
      <arg value="${dst_ffmpeg}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/ffmpeg">
    </exec>
    <exec executable="make" dir="${tmp}/ffmpeg">
    </exec>
    <exec executable="make" dir="${tmp}/ffmpeg">
      <arg value="install"/>
    </exec>
  </target>

  <target name="swftools" description="Install swftools for Adobe Flash files (SWF files).">
    <get src="${src_swftools}" dest="${dst_swftools}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_swftools}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${swftools_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${swftools_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${swftools_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="openoffice" description="Install OpenOffice.">
    <get src="${src_openoffice}" dest="${dst_openoffice}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_openoffice}"/>
    </exec>
    <exec executable="bash" outputproperty="ooo_dir">
      <arg value="-c"/>
      <arg value="ls ${tmp} | grep OOO"/>
    </exec>
    <exec executable="yum" dir="${tmp}/${ooo_dir}/RPMS">
      <arg line="-y localinstall --nogpgcheck *.rpm"/>
    </exec>
    <move file="etc" todir="/"/>
    <chmod file="/etc/rc.d/init.d/soffice" perm="+x"/>
    <exec executable="chkcofnig">
      <arg line="--add soffice"/>
    </exec>
    <exec executable="chkconfig">
      <arg line="soffice on"/>
    </exec>
    <exec executable="service">
      <arg line="soffice start"/>
    </exec>
  </target>

  <target name="postgresql" description="Install PostgreSQL">
    <echo message='### for PostgreSQL&#10;' file="${env_set_file}" append="yes"/>
    <echo message='export POSTGRES_HOME=${postgresql_home}&#10;' file="${env_set_file}" append="yes"/>
    <echo message='export PGLILB=${postgresql_home}/lib&#10;' file="${env_set_file}" append="yes"/>
    <echo message='export PGDATA=${pgdata}&#10;' file="${env_set_file}" append="yes"/>
    <echo message='export MANPATH=${manpath}:${postgresql_home}/man&#10;' file="${env_set_file}" append="yes"/>
    <echo message='export PATH=${postgresql_home}/bin:${PATH}&#10;' file="${env_set_file}" append="yes"/>
    <echo message='export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${pglib}&#10;' file="${env_set_file}" append="yes"/>
    <get src="${src_postgresql}" dest="${dst_postgresql}"/>
    <exec executable="sudo">
      <arg value="/usr/sbin/useradd"/>
      <arg value="-c"/>
      <arg value="Server"/>
      <arg value="-d"/>
      <arg value="${postgresql_home}"/>
      <arg value="pgsql"/>
    </exec>
    <exec executable="sudo">
      <arg value="rm"/>
      <arg value="-rf"/>
      <arg value="${postgresql_home}"/>
    </exec>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar">
      <arg value="xvjf"/>
      <arg value="${dst_postgresql}"/>
      <arg value="--directory"/>
      <arg value="${tmp}"/>
    </exec>
    <exec executable="sudo">
      <arg value="chown"/>
      <arg value="-R"/>
      <arg value="pgsql:pgsql"/>
      <arg value="${tmp}/${postgresql_prefix}"/>
    </exec>
    <exec executable="sudo">
      <arg value="mkdir"/>
      <arg value="${postgresql_home}-${postgresql_version}"/>
    </exec>
    <exec executable="sudo">
      <arg value="chmod"/>
      <arg value="755"/>
      <arg value="${postgresql_home}-${postgresql_version}"/>
    </exec>
    <exec executable="sudo">
      <arg value="chown"/>
      <arg value="-R"/>
      <arg value="pgsql:pgsql"/>
      <arg value="${postgresql_home}-${postgresql_version}"/>
    </exec>
    <exec executable="ln">
      <arg value="-s"/>
      <arg value="${postgresql_home}-${postgresql_version}"/>
      <arg value="${postgresql_home}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${postgresql_prefix}">
      <arg line="--prefix=${postgresql_home} --with-pgport=${postgresql_port}"/>
    </exec>
    <exec executable="sudo" dir="${tmp}/${postgresql_prefix}">
      <arg value="-u"/>
      <arg value="pgsql"/>
      <arg value="make"/>
    </exec>
    <exec executable="sudo" dir="${tmp}/${postgresql_prefix}">
      <arg value="-u"/>
      <arg value="pgsql"/>
      <arg value="make"/>
      <arg value="install"/>
    </exec>
    <mkdir dir="${pgdata}-${postgresql_version}"/>
    <exec executable="chmod">
      <arg value="700"/>
      <arg value="${pgdata}-${postgresql_version}"/>
    </exec>
    <exec executable="chown">
      <arg value="-R"/>
      <arg value="pgsql:pgsql"/>
      <arg value="${pgdata}-${postgresql_version}"/>
    </exec>
    <exec executable="ln">
      <arg value="-s"/>
      <arg value="${pgdata}-${postgresql_version}"/>
      <arg value="${pgdata}"/>
    </exec>
    <exec executable="sudo">
      <arg value="-u"/>
      <arg value="pgsql"/>
      <arg value="-i"/>
      <arg value="${postgresql_home}/bin/initdb --no-locale --encoding=UTF-8"/>
     </exec>

    <echo message='### for Log&#10;' file="${pgdata}/postgresql.conf" append="yes"/>
    <echo message="log_destination = 'syslog'&#10;" file="${pgdata}/postgresql.conf" append="yes"/>
    <echo message='### for encryption&#10;' file="${pgdata}/pg_hba.conf" append="yes"/>
    <echo message='host dspace dspace 127.0.0.1/32 md5&#10;' file="${pgdata}/pg_hba.conf" append="yes"/>
    <exec executable="chmod">
      <arg value="-R"/>
      <arg value="o-rwx"/>
      <arg value="${pgdata}-${postgresql_version}"/>
    </exec>
  </target>
  
  <target name="openmeetings" description="Install Open Meetings.">
    <get src="${src_openmeetings}" dest="${dst_openmeetings}" usetimestamp="yes"/>
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_openmeetings}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${openmeetings_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${openmeetings_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${openmeetings_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="final_message" description="Show final message.">
  </target>

</project>
