<?xml version="1.0" encoding="utf-8" ?>
<project name="OpenMeetings" default="all" basedir="." xmlns:ac="antlib:net.sf.antcontlib">
  <property environment="env"/>
  <property file="build.properties"/>

  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="/usr/share/java/lib/ant-contrib.jar"/>
    </classpath>
  </taskdef>

  <target name="all" depends="initial_message, clean, init, yum, yasm, lame, twolame, speex, ffmpeg, sox, swftools, mysql, zziplib, openmeetings, final_message" description="Install all"/>

  <target name="initial_message">
    <echo message="###&#x0A;###&#x0A;This installation process takes 25 minutes at least.&#x0A;###&#x0A;###&#x0A;"/>
  </target>

  <target name="init">
    <antcall target="httpd_start"/>
  </target>

  <target name="clean" description="Clean everything">
    <delete dir="${src}"/>
    <delete dir="/opt"/>
    <exec executable="/etc/init.d/httpd" outputproperty="httpd">
      <arg value="status"/>
    </exec>
    <condition property="httpd.status" value="true">
      <equals arg1="${httpd}" arg2="httpd は停止しています" />
    </condition>
    <!-- -->
    <antcall target="httpd_stop"/>
    <exec executable="chkconfig">
      <arg line="httpd off"/>
    </exec>
  </target>

  <target name="httpd_start" description="Start httpd" if="httpd.status">
    <exec executable="/etc/init.d/httpd">
      <arg value="start" />
    </exec>
  </target>

  <target name="httpd_stop" description="Stop httpd" unless="httpd.status">
    <exec executable="/etc/init.d/httpd">
      <arg value="stop" />
    </exec>
  </target>

  <target name="yum" description="Install packages by using yum">
    <exec executable="yum">
      <arg line="-y install gcc gcc-c++ gcc-gfortran bison flex readline-devel zlib-devel ImageMagick ghostscript libjpeg-devel fontconfig-devel giflib-devel alsa-lib-devel pulseaudio-libs-devel libsndfile-devel gsm-devel flac-devel libvorbis libvorbis-devel wavpack-devel libpng libpng-devel ImageMagick-devel libtool-ltdl-devel gtk+- gtk+-devel nasm ElectricFence xmlto SDL-devel opencv opencv-devel openssl-devel gsm-devel libid3tag libid3tag-devel libogg libogg-devel gnutls-devel libcdio-devel libdc1394-devel libiec61833-devel alsa-plugins-speex libtheora-devel libvpx-devel texi2html fftw fftw-devel ruby"/>
    </exec>
  </target>

  <target name="yasm" description="Install yasm.">
    <exec executable="yum">
      <arg line="-y install gcc xmlto"/>
    </exec>
    <get src="${src_yasm}" dest="${dst_yasm}" usetimestamp="yes"/>
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_yasm}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${yasm_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${yasm_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${yasm_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="lame" description="Install lame mp3 encoder.">
    <get src="${src_lame}" dest="${dst_lame}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_lame}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${lame_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${lame_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${lame_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="twolame" description="Install twolame mp2 encoder.">
    <exec executable="yum">
      <arg line="-y install gcc"/>
    </exec>
    <get src="${src_twolame}" dest="${dst_twolame}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_twolame}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${twolame_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${twolame_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${twolame_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="sox" description="Install SoX Sound eXchange">
    <get src="${src_sox}" dest="${dst_sox}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvjf"/>
      <arg value="${dst_sox}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${sox_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${sox_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${sox_prefix}">
      <arg value="install"/>
    </exec>
  </target>
  
  <target name="speex" description="Install Speex:A free codec for free speech.">
    <get src="${src_speex}" dest="${dst_speex}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_speex}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${speex_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${speex_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${speex_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="ffmpeg" description="Install ffmpeg:convert and stream audio and video.">
    <exec executable="yum">
      <arg line="-y install gcc"/>
    </exec>
    <get src="${src_ffmpeg}" dest="${dst_ffmpeg}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvjf"/>
      <arg value="${dst_ffmpeg}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/ffmpeg">
    </exec>
    <exec executable="make" dir="${tmp}/ffmpeg">
    </exec>
    <exec executable="make" dir="${tmp}/ffmpeg">
      <arg value="install"/>
    </exec>
  </target>

  <target name="swftools" description="Install swftools for Adobe Flash files (SWF files).">
    <get src="${src_swftools}" dest="${dst_swftools}" usetimestamp="yes"/>
    <!-- To stay away to use untar task because untar task for ant 1.7.1 is buggy. -->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_swftools}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${swftools_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${swftools_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${swftools_prefix}">
      <arg value="install"/>
    </exec>
  </target>

<!-- for default of Scientific Linux 6.3, LibreOffice was installed. 
  You can use LibreOffice instead of OpenOffice
  <target name="openoffice" description="Install OpenOffice.">
    <get src="${src_openoffice}" dest="${dst_openoffice}" usetimestamp="yes"/>
    <!- - To stay away to use untar task because untar task for ant 1.7.1 is buggy. - ->
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvzf"/>
      <arg value="${dst_openoffice}"/>
    </exec>
    <exec executable="bash" outputproperty="ooo_dir">
      <arg value="-c"/>
      <arg value="ls ${tmp} | grep OOO"/>
    </exec>
    <exec executable="yum" dir="${tmp}/${ooo_dir}/RPMS">
      <arg line="-y localinstall - -nogpgcheck *.rpm"/>
    </exec>
    <move file="etc" todir="/"/>
    <chmod file="/etc/rc.d/init.d/soffice" perm="+x"/>
    <exec executable="chkcofnig">
      <arg line="- -add soffice"/>
    </exec>
    <exec executable="chkconfig">
      <arg line="soffice on"/>
    </exec>
    <exec executable="service">
      <arg line="soffice start"/>
    </exec>
  </target>
-->

  <target name="mysql" description="Install MySQL">
    <exec executable="yum">
      <arg line="-y install mysql"/>
    </exec>
    <copy file="etc/my.cnf" todir="/"/>
    <exec executable="chkconfig">
      <arg line="mysqld on"/>
    </exec>
    <exec executable="service">
      <arg line="mysqld start"/>
    </exec>
    <exec executable="mysqladmin">
      <arg line="-u root password iugonet"/>
    </exec>
    <exec executable="bash">
      <arg value="-c"/>
      <arg value="mysql -u root &lt; sql/init.sql"/>
    </exec>
  </target>

  <target name="openmeetings" description="Install Open Meetings.">
    <get src="${src_openmeetings}" dest="${dst_openmeetings}" usetimestamp="yes"/>
    <unzip src="${dst_openmeetings}" dest="${openmeetings_home}"/>
    <copy file="${openmeetings_home}/red5.jar" todir="/usr/local/openmeetings"/>
    <copy todir="/etc">
      <fileset dir="etc" >
	<include name="**/*" />
      </fileset>
    </copy>
    <chmod file="/etc/rc.d/init.d/openmeetings" perm="+x"/>
    <exec executable="chkconfig">
      <arg line="--add openmeetings"/>
    </exec>
    <exec executable="chkconfig">
      <arg line="openmeetings on"/>
    </exec>
    <exec executable="service">
      <arg line="openmeetings start"/>
    </exec>
  </target>

  <target name="zziplib" description="Install zziplib">
    <exec executable="yum">
      <arg line="-y install gcc xmlto zlib-devel"/>
    </exec>
    <get src="${src_zziplib}" dest="${dst_zziplib}" usetimestamp="yes"/>
    <exec executable="tar" dir="${tmp}/">
      <arg value="xvjf"/>
      <arg value="${dst_zziplib}"/>
    </exec>
    <exec executable="./configure" dir="${tmp}/${zziplib_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${zziplib_prefix}">
    </exec>
    <exec executable="make" dir="${tmp}/${zziplib_prefix}">
      <arg value="install"/>
    </exec>
  </target>

  <target name="final_message" description="Show final message.">
  </target>

</project>
